generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(cuid())
  email       String      @unique
  name        String?
  password    String?
  phoneNumber String?
  address     String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isVendor    Boolean     @default(false)
  orders      Order[]
  restaurant  Restaurant?
}

model Restaurant {
  id             String     @id @default(uuid())
  name           String     @unique
  location       String
  phone          String?
  img            String?
  vendorId       String     @unique
  isOnline       Boolean    @default(true)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  totalRevenue   Float      @default(0.0)
  closingTime    String
  deliveryCharge Float
  openingTime    String
  menu           Menu?
  menuItems      MenuItem[]
  orders         Order[]
  vendor         User       @relation(fields: [vendorId], references: [id])
}

model Menu {
  id           String     @id @default(uuid())
  restaurantId String     @unique
  categories   Category[]
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model Category {
  id     String     @id @default(uuid())
  name   String
  menuId String
  menu   Menu       @relation(fields: [menuId], references: [id])
  items  MenuItem[]
}

model MenuItem {
  id             String          @id @default(uuid())
  name           String
  price          Float
  categoryId     String
  restaurantId   String
  category       Category        @relation(fields: [categoryId], references: [id])
  restaurant     Restaurant      @relation(fields: [restaurantId], references: [id])
  orderItems     OrderItem[]
  customizations Customization[] @relation("MenuItemCustomizations")
}

model Customization {
  id         String      @id @default(uuid())
  name       String
  price      Float
  menuItems  MenuItem[]  @relation("MenuItemCustomizations")
  orderItems OrderItem[] @relation("OrderItemCustomizations")
}

model Order {
  id           String      @id @default(uuid())
  userId       String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  totalAmount  Float
  status       String
  restaurantId String
  isPaidOnline Boolean?    @default(false)
  isPickup     Boolean?    @default(false)
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  user         User        @relation(fields: [userId], references: [id])
  items        OrderItem[]
}

model OrderItem {
  id             String          @id @default(uuid())
  orderId        String
  menuItemId     String
  quantity       Int
  menuItem       MenuItem        @relation(fields: [menuItemId], references: [id])
  order          Order           @relation(fields: [orderId], references: [id])
  customizations Customization[] @relation("OrderItemCustomizations")
}
